[preprocess]
; Gather merged files filenames in a one reserved column 'group':
; Used for splitting by default (GroupKFold), see [training] group_column config.
groups = True
label = y_target
label_encode = True
transformers = {
    ; Drop must come before passthrough:
    'drop_columns': ['unwanted_column'],
    ; Pass features as is to the pipeline, empty list to keep all features.
    'passthrough': [],
    ; 'passthrough': ['First band', 'Second band', 'Third band', 'RSI', 'RSI-based MA', 'Wave', 'Lagging wave'],
    ; Use with groups = True above, will encode groups from train filenames:
    'ordinal_encoder': ['group'],
    ; Encode groups in their own column (beware you cannot split on one hot encoder groups):
    ; 'one_hot_encoder': ['group'],
  }
; Pipeline suffixes are removed by default:
verbose_feature_names_out = False
save_transformers_pipeline = False
transformers_pipeline_directory = output/transformers
preprocessors = [
    'drop_na',
    ; 'tsfresh'
  ]

[eda]
show_plots = False
save_images = False
save_timestamp = True
images_extension = png
images_directory = output/eda
plots = [
    'heatmap',
    ; 'pairplot'
    ; 'distribution_x',
    ; 'distribution_y',
  ]
; distribution_x=column_a
; figsize=50, 50
; dpi = 600
; heatmap_features = ['column a', 'column b', 'column n']

[training]
; Disable to do eda only.
enabled = True
; Multiple files will be combined, by default the "index" axis is used.
; If 'index' axis is used, a group column with the filename will be added.
; If 'column' axis is used, no grouping will occur.
trainfiles_axis = index
; Default splitting method is KFold
; @todo add the shuffle method.
splitting_method = base_cv
; Nb splits will be equal to the number of files in --train_files by default.
;nb_splits = 2
group_column = group
pipeline = imblearn.pipeline
estimators = [
    ; 'power_transforms/yeo_johnson',
    ; 'sampler/tomek_links',
    'classifier/lgbm_random_forest_mc',
    ; 'regressor/lgbm_rf_regressor',
  ]
runners = [
    'confusion_matrix',
    ; precision_recall
  ]
save_model = False
model_timestamp = False
models_directory = models
; Use a random seed (default) or specify one
; The seed will be printed with results
seed = random

[predictions]
; Will use training by default, else use a model_file if specified.
;model_file = model
predictions_directory = output/predictions
save_predictions = False
predictions_timestamp = True
roundpredictions = False
; @see https://scikit-learn.org/stable/modules/model_evaluation.html#scoring-parameter
scoring = accuracy

[debug]
enabled = False
port = 5678
host = 127.0.0.1
wait_for_client = True
