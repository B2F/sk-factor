[dataset]
loader = 'toy_datasets'
# Ignored if -t (--train_files) is passed to the CLI.
files = ['iris']
show_columns = true
plugins = 'examples.toy_datasets'

[preprocess]
label = 'target'
label_encode = true
# The shuffle value is its random_state seed.
preprocessors.shuffle = 1
preprocessors.drop_rows = -3
# Dropped samples left out for predictions (relevant for testing the final model):
drop_rows_to_predict_file = true
# Gather merged files IDs in a one reserved column 'group':
groupFiles = false
# preprocessors.drop_columns = ['column_unwanted']
# preprocessors.drop_na = []
#  Pass features as is to the pipeline, empty list to keep all features.
transformers.passthrough = []

#  Use with groups = true above, will encode groups from train filenames:
# transformers.ordinal_encoder = ['group']

#  Encode groups in their own column (beware you cannot split on one hot encoder groups):
# transformers.one_hot_encoder = ['group']

# Pipeline suffixes are removed from columns by default:
verbose_feature_names_out = false

# Multiple files will be combined, by default the "index" axis is used.
# If 'index' axis is used, a group column with the filename will be added.
# If 'column' axis is used, no grouping will occur.
files_axis = 'index'

[eda]
enabled = false
show_plots = false
save_images = false
save_timestamp = true
images_extension = 'png'
images_directory = 'output/eda'
plots = [
  'heatmap',
  'pairplot',
]
# distribution_x=column_a
figsize = [35, 35]
dpi = 200
# features = ['column a', 'column b', 'column n']

[training]
# Disable to do eda only.
enabled = true
pipeline = 'imblearn.pipeline'
samplers = [
    'sampler/near_miss',
]
transformers = [
    'transformer/yeo_johnson',
]
estimators = [
    'classifier/linear_svc',
    'classifier/xgboost',
    'classifier/lgbm_random_forest_mc',
]
runners = [
    'score',
    # 'confusion_matrix',
    # precision_recall,
]

splitting_method.kfold_shuffle = 2
splitting_method.kfold_stratified = 2
splitting_random_state = 26387

save_model = true
model_timestamp = false
models_directory = 'models'
# Use a random seed (default) or specify one
seed = 7368298
# @see https://scikit-learn.org/stable/modules/model_evaluation.html#common-cases-predefined-values
scoring = 'accuracy'

[predictions]
enabled = true
loader = 'csv'
preprocess = false
predict_file = 'tests/iris/test.csv'
# Leave out the models param to use fitted pipelines from the previous training.
# models = [
#   'models/iris-classifier/lgbm_random_forest_mc.pkl',
#   'models/iris-classifier/xgboost.pkl',
#   'models/iris-classifier/linear_svc.pkl',
# ]
# Available plugins: binary, multiclass, regressor
objective = 'multiclass'
# Use the preprocess, as in training.
threshold = 0.5
predictions_directory = 'tests/iris/predictions'
save_predictions = true
predictions_timestamp = false
# Keep X data features in the final predictions columns.
keep_data = true

[debug]
enabled = false
port = 5678
host = '127.0.0.1'
wait_for_client = true
